<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAWBA2THFowCR04CyI1CiA3CiE7CyQrCBo3CiIzCR87CyQyCh5oFD87CyQAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcBRHnLI2nIGZADCfrLI93Fkk3CiHkK4t/GE5Y
        ETXxLZNjEzwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABe
        EjlLDi08CySFGVEHAQQAAAB5F0pLDi09CyV0FkcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtIWrnLI0MAgcAAAAAAAAAAAC6I3HfK4gJAQUAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAQRwFkVRDzFX
        EDU+CyZUEDNpFEAiBhQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAA0CiDqLI9mEz4rCBrlK4xyFkUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEDSpqFEBnFD9qFEEAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAABAACnH2XLJnwKAgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAgYnBxgAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA
</value>
  </data>
</root>